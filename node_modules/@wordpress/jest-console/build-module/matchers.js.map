{"version":3,"names":["matcherHint","printExpected","printReceived","supportedMatchers","createErrorMessage","spyInfo","spy","pass","calls","matcherName","methodName","expected","hint","message","map","getMockName","createSpyInfo","mock","JSON","stringify","includes","length","createToHaveBeenCalledMatcher","received","assertionsNumber","createToHaveBeenCalledWith","expect","extend","Object","entries","reduce","result","matcherNameWith"],"sources":["@wordpress/jest-console/src/matchers.ts"],"sourcesContent":["/**\n * External dependencies\n */\nimport { matcherHint, printExpected, printReceived } from 'jest-matcher-utils';\n\n/**\n * Internal dependencies\n */\nimport supportedMatchers from './supported-matchers';\nimport type { Mock } from 'jest-mock';\nimport type {\n\tExtendedMock,\n\tMatcherFunction,\n\tMatcherResult,\n\tMatcherWithArgsFunction,\n} from './types';\n\ninterface SpyInfo {\n\tspy: Mock;\n\tpass: boolean;\n\tcalls: unknown[][];\n\tmatcherName: string;\n\tmethodName: string;\n\texpected?: unknown[];\n}\n\nconst createErrorMessage = ( spyInfo: SpyInfo ) => {\n\tconst { spy, pass, calls, matcherName, methodName, expected } = spyInfo;\n\tconst hint = pass ? `.not${ matcherName }` : matcherName;\n\tconst message = pass\n\t\t? `Expected mock function not to be called but it was called with:\\n${ calls.map(\n\t\t\t\tprintReceived\n\t\t  ) }`\n\t\t: `Expected mock function to be called${\n\t\t\t\texpected ? ` with:\\n${ printExpected( expected ) }\\n` : '.'\n\t\t  }\\nbut it was called with:\\n${ calls.map( printReceived ) }`;\n\n\treturn () =>\n\t\t`${ matcherHint( hint, spy.getMockName() ) }` +\n\t\t'\\n\\n' +\n\t\tmessage +\n\t\t'\\n\\n' +\n\t\t`console.${ methodName }() should not be used unless explicitly expected\\n` +\n\t\t'See https://www.npmjs.com/package/@wordpress/jest-console for details.';\n};\n\nconst createSpyInfo = (\n\tspy: Mock,\n\tmatcherName: string,\n\tmethodName: string,\n\texpected?: unknown[]\n) => {\n\tconst calls = spy.mock.calls;\n\n\tconst pass = expected\n\t\t? JSON.stringify( calls ).includes( JSON.stringify( expected ) )\n\t\t: calls.length > 0;\n\n\tconst message = createErrorMessage( {\n\t\tspy,\n\t\tpass,\n\t\tcalls,\n\t\tmatcherName,\n\t\tmethodName,\n\t\texpected,\n\t} );\n\n\treturn {\n\t\tpass,\n\t\tmessage,\n\t};\n};\n\nconst createToHaveBeenCalledMatcher =\n\t( matcherName: string, methodName: string ) =>\n\t( received: Record< string, Mock > ): MatcherResult => {\n\t\tconst spy = received[ methodName ] as ExtendedMock;\n\t\tconst spyInfo = createSpyInfo( spy, matcherName, methodName );\n\t\tspy.assertionsNumber += 1;\n\t\treturn spyInfo;\n\t};\n\nconst createToHaveBeenCalledWith = (\n\tmatcherName: string,\n\tmethodName: string\n) =>\n\tfunction (\n\t\treceived: Record< string, Mock >,\n\t\t...expected: unknown[]\n\t): MatcherResult {\n\t\tconst spy = received[ methodName ] as ExtendedMock;\n\t\tconst spyInfo = createSpyInfo( spy, matcherName, methodName, expected );\n\t\tspy.assertionsNumber += 1;\n\t\treturn spyInfo;\n\t};\n\ntype MatchersObject = Record<\n\tstring,\n\tMatcherFunction | MatcherWithArgsFunction\n>;\n\nexpect.extend(\n\tObject.entries( supportedMatchers ).reduce< MatchersObject >(\n\t\t( result, [ methodName, matcherName ] ) => {\n\t\t\tconst matcherNameWith = `${ matcherName }With`;\n\n\t\t\treturn {\n\t\t\t\t...result,\n\t\t\t\t[ matcherName ]: createToHaveBeenCalledMatcher(\n\t\t\t\t\t`.${ matcherName }`,\n\t\t\t\t\tmethodName\n\t\t\t\t),\n\t\t\t\t[ matcherNameWith ]: createToHaveBeenCalledWith(\n\t\t\t\t\t`.${ matcherNameWith }`,\n\t\t\t\t\tmethodName\n\t\t\t\t),\n\t\t\t};\n\t\t},\n\t\t{}\n\t)\n);\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,WAAW,EAAEC,aAAa,EAAEC,aAAa,QAAQ,oBAAoB;;AAE9E;AACA;AACA;AACA,OAAOC,iBAAiB,MAAM,sBAAsB;AAkBpD,MAAMC,kBAAkB,GAAKC,OAAgB,IAAM;EAClD,MAAM;IAAEC,GAAG;IAAEC,IAAI;IAAEC,KAAK;IAAEC,WAAW;IAAEC,UAAU;IAAEC;EAAS,CAAC,GAAGN,OAAO;EACvE,MAAMO,IAAI,GAAGL,IAAI,GAAG,OAAQE,WAAW,EAAG,GAAGA,WAAW;EACxD,MAAMI,OAAO,GAAGN,IAAI,GACjB,oEAAqEC,KAAK,CAACM,GAAG,CAC9EZ,aACA,CAAC,EAAG,GACJ,sCACAS,QAAQ,GAAG,WAAYV,aAAa,CAAEU,QAAS,CAAC,IAAK,GAAG,GAAG,8BAC5BH,KAAK,CAACM,GAAG,CAAEZ,aAAc,CAAC,EAAG;EAE/D,OAAO,MACN,GAAIF,WAAW,CAAEY,IAAI,EAAEN,GAAG,CAACS,WAAW,CAAC,CAAE,CAAC,EAAG,GAC7C,MAAM,GACNF,OAAO,GACP,MAAM,GACN,WAAYH,UAAU,oDAAqD,GAC3E,wEAAwE;AAC1E,CAAC;AAED,MAAMM,aAAa,GAAGA,CACrBV,GAAS,EACTG,WAAmB,EACnBC,UAAkB,EAClBC,QAAoB,KAChB;EACJ,MAAMH,KAAK,GAAGF,GAAG,CAACW,IAAI,CAACT,KAAK;EAE5B,MAAMD,IAAI,GAAGI,QAAQ,GAClBO,IAAI,CAACC,SAAS,CAAEX,KAAM,CAAC,CAACY,QAAQ,CAAEF,IAAI,CAACC,SAAS,CAAER,QAAS,CAAE,CAAC,GAC9DH,KAAK,CAACa,MAAM,GAAG,CAAC;EAEnB,MAAMR,OAAO,GAAGT,kBAAkB,CAAE;IACnCE,GAAG;IACHC,IAAI;IACJC,KAAK;IACLC,WAAW;IACXC,UAAU;IACVC;EACD,CAAE,CAAC;EAEH,OAAO;IACNJ,IAAI;IACJM;EACD,CAAC;AACF,CAAC;AAED,MAAMS,6BAA6B,GAClCA,CAAEb,WAAmB,EAAEC,UAAkB,KACvCa,QAAgC,IAAqB;EACtD,MAAMjB,GAAG,GAAGiB,QAAQ,CAAEb,UAAU,CAAkB;EAClD,MAAML,OAAO,GAAGW,aAAa,CAAEV,GAAG,EAAEG,WAAW,EAAEC,UAAW,CAAC;EAC7DJ,GAAG,CAACkB,gBAAgB,IAAI,CAAC;EACzB,OAAOnB,OAAO;AACf,CAAC;AAEF,MAAMoB,0BAA0B,GAAGA,CAClChB,WAAmB,EACnBC,UAAkB,KAElB,UACCa,QAAgC,EAChC,GAAGZ,QAAmB,EACN;EAChB,MAAML,GAAG,GAAGiB,QAAQ,CAAEb,UAAU,CAAkB;EAClD,MAAML,OAAO,GAAGW,aAAa,CAAEV,GAAG,EAAEG,WAAW,EAAEC,UAAU,EAAEC,QAAS,CAAC;EACvEL,GAAG,CAACkB,gBAAgB,IAAI,CAAC;EACzB,OAAOnB,OAAO;AACf,CAAC;AAOFqB,MAAM,CAACC,MAAM,CACZC,MAAM,CAACC,OAAO,CAAE1B,iBAAkB,CAAC,CAAC2B,MAAM,CACzC,CAAEC,MAAM,EAAE,CAAErB,UAAU,EAAED,WAAW,CAAE,KAAM;EAC1C,MAAMuB,eAAe,GAAG,GAAIvB,WAAW,MAAO;EAE9C,OAAO;IACN,GAAGsB,MAAM;IACT,CAAEtB,WAAW,GAAIa,6BAA6B,CAC7C,IAAKb,WAAW,EAAG,EACnBC,UACD,CAAC;IACD,CAAEsB,eAAe,GAAIP,0BAA0B,CAC9C,IAAKO,eAAe,EAAG,EACvBtB,UACD;EACD,CAAC;AACF,CAAC,EACD,CAAC,CACF,CACD,CAAC","ignoreList":[]}